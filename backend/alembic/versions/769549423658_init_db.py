"""init_db

Revision ID: 769549423658
Revises: 
Create Date: 2025-04-01 23:41:51.260401

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '769549423658'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('classes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False, comment='班级名称'),
    sa.Column('grade', sa.String(length=20), nullable=False, comment='年级'),
    sa.Column('year', sa.Integer(), nullable=False, comment='入学年份'),
    sa.Column('head_teacher_id', sa.Integer(), nullable=True, comment='班主任ID'),
    sa.Column('created_at', sa.DateTime(), nullable=False, comment='创建时间'),
    sa.Column('updated_at', sa.DateTime(), nullable=False, comment='更新时间'),
    sa.ForeignKeyConstraint(['head_teacher_id'], ['users.id'], name='fk_classes_head_teacher_id', use_alter=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_classes_id'), 'classes', ['id'], unique=False)
    op.create_table('quant_items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False, comment='名称'),
    sa.Column('description', sa.Text(), nullable=True, comment='描述'),
    sa.Column('default_score', sa.Numeric(precision=5, scale=2), nullable=False, comment='默认分数'),
    sa.Column('category', sa.String(length=50), nullable=False, comment='类别'),
    sa.Column('is_active', sa.Boolean(), nullable=False, comment='是否激活'),
    sa.Column('created_at', sa.DateTime(), nullable=False, comment='创建时间'),
    sa.Column('updated_at', sa.DateTime(), nullable=False, comment='更新时间'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_quant_items_id'), 'quant_items', ['id'], unique=False)
    op.create_table('roles',
    sa.Column('id', sa.Integer(), nullable=False, comment='ID'),
    sa.Column('name', sa.String(length=50), nullable=False, comment='名称'),
    sa.Column('description', sa.String(length=255), nullable=True, comment='描述'),
    sa.Column('created_at', sa.DateTime(), nullable=False, comment='创建时间'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_roles_id'), 'roles', ['id'], unique=False)
    op.create_index(op.f('ix_roles_name'), 'roles', ['name'], unique=True)
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False, comment='ID'),
    sa.Column('username', sa.String(length=50), nullable=False, comment='用户名'),
    sa.Column('password_hash', sa.String(length=255), nullable=False, comment='密码哈希'),
    sa.Column('full_name', sa.String(length=100), nullable=False, comment='姓名'),
    sa.Column('role_id', sa.Integer(), nullable=False, comment='角色ID'),
    sa.Column('class_id', sa.Integer(), nullable=True, comment='班级ID'),
    sa.Column('is_active', sa.Boolean(), nullable=False, comment='是否激活'),
    sa.Column('created_at', sa.DateTime(), nullable=False, comment='创建时间'),
    sa.Column('updated_at', sa.DateTime(), nullable=False, comment='更新时间'),
    sa.ForeignKeyConstraint(['class_id'], ['classes.id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('ai_queries',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False, comment='用户ID'),
    sa.Column('query_text', sa.Text(), nullable=False, comment='查询文本'),
    sa.Column('response_text', sa.Text(), nullable=True, comment='响应文本'),
    sa.Column('context_data', sa.Text(), nullable=True, comment='上下文数据'),
    sa.Column('created_at', sa.DateTime(), nullable=False, comment='创建时间'),
    sa.Column('completed_at', sa.DateTime(), nullable=True, comment='完成时间'),
    sa.Column('processing_time', sa.Integer(), nullable=True, comment='处理时间（毫秒）'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_ai_queries_id'), 'ai_queries', ['id'], unique=False)
    op.create_table('notifications',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=False, comment='标题'),
    sa.Column('content', sa.Text(), nullable=False, comment='内容'),
    sa.Column('type', sa.String(length=50), nullable=False, comment='类型'),
    sa.Column('sender_id', sa.Integer(), nullable=False, comment='发送者ID'),
    sa.Column('recipient_user_id', sa.Integer(), nullable=True, comment='接收者用户ID'),
    sa.Column('recipient_role_id', sa.Integer(), nullable=True, comment='接收者角色ID'),
    sa.Column('is_read', sa.Boolean(), nullable=True, comment='是否已读'),
    sa.Column('created_at', sa.DateTime(), nullable=False, comment='创建时间'),
    sa.Column('read_at', sa.DateTime(), nullable=True, comment='阅读时间'),
    sa.ForeignKeyConstraint(['recipient_role_id'], ['roles.id'], ),
    sa.ForeignKeyConstraint(['recipient_user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['sender_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_notifications_id'), 'notifications', ['id'], unique=False)
    op.create_table('students',
    sa.Column('id', sa.Integer(), nullable=False, comment='ID'),
    sa.Column('user_id', sa.Integer(), nullable=True, comment='用户ID'),
    sa.Column('student_id_no', sa.String(length=50), nullable=False, comment='学号'),
    sa.Column('full_name', sa.String(length=100), nullable=False, comment='姓名'),
    sa.Column('class_id', sa.Integer(), nullable=False, comment='班级ID'),
    sa.Column('gender', sa.String(length=10), nullable=False, comment='性别'),
    sa.Column('birth_date', sa.Date(), nullable=True, comment='出生日期'),
    sa.Column('contact_info', sa.String(length=255), nullable=True, comment='联系方式'),
    sa.Column('created_at', sa.DateTime(), nullable=False, comment='创建时间'),
    sa.Column('updated_at', sa.DateTime(), nullable=False, comment='更新时间'),
    sa.ForeignKeyConstraint(['class_id'], ['classes.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_students_class_id'), 'students', ['class_id'], unique=False)
    op.create_index(op.f('ix_students_full_name'), 'students', ['full_name'], unique=False)
    op.create_index(op.f('ix_students_id'), 'students', ['id'], unique=False)
    op.create_index(op.f('ix_students_student_id_no'), 'students', ['student_id_no'], unique=True)
    op.create_table('quant_records',
    sa.Column('id', sa.Integer(), nullable=False, comment='ID'),
    sa.Column('student_id', sa.Integer(), nullable=False, comment='学生ID'),
    sa.Column('item_id', sa.Integer(), nullable=False, comment='项目ID'),
    sa.Column('score', sa.Numeric(precision=5, scale=2), nullable=False, comment='分数'),
    sa.Column('reason', sa.Text(), nullable=True, comment='原因'),
    sa.Column('recorder_id', sa.Integer(), nullable=False, comment='记录者ID'),
    sa.Column('record_date', sa.Date(), nullable=False, comment='记录日期'),
    sa.Column('created_at', sa.DateTime(), nullable=False, comment='创建时间'),
    sa.Column('updated_at', sa.DateTime(), nullable=False, comment='更新时间'),
    sa.ForeignKeyConstraint(['item_id'], ['quant_items.id'], ),
    sa.ForeignKeyConstraint(['recorder_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['students.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_quant_records_id'), 'quant_records', ['id'], unique=False)
    op.create_index(op.f('ix_quant_records_item_id'), 'quant_records', ['item_id'], unique=False)
    op.create_index(op.f('ix_quant_records_record_date'), 'quant_records', ['record_date'], unique=False)
    op.create_index(op.f('ix_quant_records_recorder_id'), 'quant_records', ['recorder_id'], unique=False)
    op.create_index(op.f('ix_quant_records_student_id'), 'quant_records', ['student_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_quant_records_student_id'), table_name='quant_records')
    op.drop_index(op.f('ix_quant_records_recorder_id'), table_name='quant_records')
    op.drop_index(op.f('ix_quant_records_record_date'), table_name='quant_records')
    op.drop_index(op.f('ix_quant_records_item_id'), table_name='quant_records')
    op.drop_index(op.f('ix_quant_records_id'), table_name='quant_records')
    op.drop_table('quant_records')
    op.drop_index(op.f('ix_students_student_id_no'), table_name='students')
    op.drop_index(op.f('ix_students_id'), table_name='students')
    op.drop_index(op.f('ix_students_full_name'), table_name='students')
    op.drop_index(op.f('ix_students_class_id'), table_name='students')
    op.drop_table('students')
    op.drop_index(op.f('ix_notifications_id'), table_name='notifications')
    op.drop_table('notifications')
    op.drop_index(op.f('ix_ai_queries_id'), table_name='ai_queries')
    op.drop_table('ai_queries')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_roles_name'), table_name='roles')
    op.drop_index(op.f('ix_roles_id'), table_name='roles')
    op.drop_table('roles')
    op.drop_index(op.f('ix_quant_items_id'), table_name='quant_items')
    op.drop_table('quant_items')
    op.drop_index(op.f('ix_classes_id'), table_name='classes')
    op.drop_table('classes')
    # ### end Alembic commands ###
